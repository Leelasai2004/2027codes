/*
⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⢹⠉⠻⡉⠛⣽⠿⠛⠉⠉⠉⠉⠉⠉⠙⡍⡙⠯⣻⢿⢍⠭⠋⣉⣭⣭⣯⣽⣉⣉⠉⠉⢉⣉⠭⠛⠉⡝⣉⣩⠝⠉⠉⠉⠉⠙⠻⢍⣩⡟⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⡀⢇⠀⢠⠙⠲⢦⣄⣀⠀⠉⠉⠁⠓⠏⢦⡀⢻⣯⣶⠿⠛⠉⠁⠀⠀⠀⠈⠉⠉⠉⠀⠀⢠⣾⣋⣖⣥⣲⣶⣤⣤⣤⣴⣾⢿⣿⠓⡤⢀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣳⣄⣀⣀⣀⣀⣀⣀⣠⣼⣃⣘⣆⠀⢷⢄⡀⠀⠀⠈⠁⠉⠉⠻⣏⢆⡹⣾⡿⠃⠀⠀⠀⠀⠀⣀⣠⠤⣴⠞⣁⠴⠾⠿⠿⠽⠯⣟⣷⣯⣟⡷⣯⣟⡾⣯⡟⠀⠤⣞⠁⠀⠀⠀⢀⣤⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⣄⠀⠀⠀⠀⠀⠀⠹⣷⣻⣟⣿⣻⡽⢯⡿⣽⢫⣟⡿⠿⠷⠜⣎⢫⡝⠲⠤⢄⡀⠀⠀⠙⣶⣸⠟⠀⣀⠤⢖⠫⣍⠹⡐⣆⡗⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⢾⣽⡿⣤⣤⣤⣩⣭⣦⣴⡾⣟⣯⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
     ⠀⠀⠀⠀⠀⠀⠀⠹⣿⡶⣄⡀⠀⠀⠀⢻⣷⣻⢮⣗⠿⠯⠗⠛⠉⠁⢀⣠⠤⣤⢌⣆⠚⢧⡊⢆⡉⠦⡀⠀⢹⠏⣠⠞⣡⠚⣌⢓⣬⡵⠷⢯⡭⡽⢶⠶⠶⣄⣂⠶⠊⠁⠀⣀⣴⢿⢯⣻⣽⣻⢿⣻⣽⣻⣽⣻⡽⣾⣽⣻⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
     ⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣽⣻⢶⣦⣤⣌⣱⣯⣟⡞⣷⢄⡀⠢⣀⠀⡀⠈⠑⠮⡙⠒⠛⠒⡛⢦⡘⠤⠙⠆⡜⠞⣀⣎⣤⡷⢚⡭⢒⡼⢩⠖⣥⡙⢦⣙⣖⠊⠁⠀⠀⠈⠉⢉⣉⠽⠯⠷⠯⠽⠯⠷⠯⠷⠛⠓⣹⡿⣾⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢷⣯⣟⣾⠷⠯⠿⠽⠻⠼⠧⠯⠿⠆⠈⢻⣙⡯⢭⣉⡁⢎⣁⠦⠼⠖⠻⠞⠲⠼⠗⠉⠡⠒⠉⠉⠉⣿⣿⣿⣿⣾⣦⣽⣦⢧⠼⣩⢯⣽⣭⡟⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣾⣻⣿⣅⣠⣴⡞⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⡼⣧⢧⡀⠀⠀⠀⠀⠀⢀⡠⠤⠛⡃⢄⠠⣀⠘⡻⠟⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣀⠀⣘⣿⡿⣿⢿⣿⣿⣿⣿⣼⣣⡄⢤⡘⢻⠛⡟⠿⠧⢤⣄⡤⠄⢀⣠⣤⣿⣧⣟⣿⣻⣟⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠦⣤⣤⣤⣤⣿⣯⡿⣹⢦⣄⡀⠀⠒⠉⠉⠉⠁⢉⡔⢂⡤⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⢿⣻⡽⣟⡿⣽⣻⡽⣯⢿⣽⣾⣿⠿⠿⢿⣶⣉⣦⠙⢤⡗⠚⠉⠀⣀⣺⣟⣷⣫⠷⢿⣞⣷⣻⡾⡅⢀⡠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⣞⡷⢯⣻⠿⣽⣎⣿⣓⣂⠐⠒⠒⢚⠗⣉⠿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣯⣟⣳⢿⣽⣻⢷⣯⢿⣽⣻⣾⣏⡥⠼⠤⠦⣈⣳⣬⢛⡓⢚⢓⠢⢤⣤⡄⢀⣠⣴⢾⠿⣽⢾⡿⣶⢾⣟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣽⡻⣖⡤⣄⣀⣀⠀⠀⡠⢊⡰⠃⢀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢷⣯⣟⡿⣾⣽⣻⣞⡿⣾⡽⣿⠃⠀⠀⠀⠀⣤⣈⣿⡧⣊⢵⢊⠯⣉⠀⠀⠀⠀⠈⠉⠉⢉⣽⣻⣞⠏⠨⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠲⢶⣶⢶⡶⣟⣿⣛⡷⠝⠊⣠⣔⡮⠴⡛⠁⠀⠀⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣾⣟⡷⣯⢷⣯⣟⣷⣻⣽⣷⣄⡀⣠⣼⣿⣿⣿⣿⣶⣊⣧⠛⣬⡑⠀⠀⠀⢀⣤⣞⢯⣷⠟⠁⡤⠤⠤⠝⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠫⢿⡽⣦⣤⣀⡒⠛⠛⢒⠆⣴⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣯⣷⣾⣿⣿⣿⣾⣿⣾⣽⣾⣷⣻⣿⣟⣿⣽⣷⣿⣿⣿⣍⡚⣧⠐⡙⢶⣖⠉⠛⠓⠛⠿⢵⣄⣀⣱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠓⠾⣷⠋⠁⣠⠊⣰⡇⠀⢀⣠⣤⣤⣤⣤⣤⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠋⠙⠻⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡿⣽⣿⡴⢹⡜⡍⠑⠊⠛⠒⠠⠀⠀⠀⣀⣔⠁⠳⢀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠃⠀⢚⣴⠟⣹⠶⠿⣿⣿⣯⠷⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢯⣿⣽⢷⣻⡝⢾⠡⠘⣄⠀⠀⢦⣤⡤⠒⡋⠔⣨⠷⠤⠀⠁⣈⠝⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⣀⡴⠿⢳⠎⡿⠀⣼⠿⠋⠀⠀⠹⡉⠁⢒⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢿⣿⣿⣟⣿⣿⣟⡿⣿⣿⣿⣿⣿⣾⢿⣯⣿⣯⢿⡏⡾⢁⠜⡉⠢⡀⠘⣧⢀⠣⡘⣤⠙⡄⢀⣤⠖⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣤⣂⣉⠀⠀⠤⡤⢀⡎⠴⡧⠞⠁⠀⠀⠀⠀⠀⠐⠄⣀⠉⠱⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠇⢸⣿⣿⡟⠓⠁⠈⠻⣷⣻⣞⣿⣻⣯⣿⡇⠀⠻⣿⣧⣗⡈⡤⢝⣄⠁⠀⠘⢯⡀⠹⡄⢙⠻⡄⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠞⣡⣎⣔⠪⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⡈⠆⠀⠀⠀⠀⠀⠀⠀⠈⣰⣿⣳⢯⣷⠂⠀⠀⠀⢸⣷⣻⣞⣷⣻⡿⠀⠀⠀⠈⢙⠃⠅⠃⢀⠈⠀⠑⣤⠤⠉⠳⢧⠘⡄⠑⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠃⠤⢀⣀⣀⡼⡞⣿⠀⠀⠀⣀⠤⠄⠄⠂⠀⠄⡀⠀⠐⡜⠀⠀⠀⠀⠀⠀⠀⠀⣻⢧⣟⣯⢷⡆⠈⠁⣲⣾⢷⣻⣞⣷⣿⡄⠀⠀⠀⠀⠘⠀⠀⠀⠀⢱⠤⡀⠈⠢⣍⠢⢹⠀⢹⠒⠤⣈⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠌⡸⡄⠃⣿⠀⠨⡙⢁⣰⣤⣤⣤⣤⣐⡀⠕⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣾⣾⣿⣿⣿⣷⣿⣿⣿⣯⣿⣻⣾⣿⣶⠀⠀⢀⠇⠀⠀⠀⠀⡆⢀⡠⡍⢲⠨⠷⢽⡀⢸⠀⠀⠀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⠊⠀⣧⡇⡏⡆⢚⣶⠟⠛⠉⠁⠀⠈⠉⠉⠚⡀⠀⠀⠀⠀⠀⠀⠀⠀⢾⡿⠿⢧⣟⡾⠷⠿⢛⢻⣿⡿⣿⣿⣿⢷⣻⣾⠀⢀⠎⠀⠀⠀⡇⠀⡷⠚⡆⢸⢠⠃⢎⠸⡧⡈⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠇⣧⡇⠀⠁⠀⠀⠀⠀⠀⠀⠀⠔⢁⣼⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡇⠀⠀⠈⠉⢹⣿⣱⢯⣿⠋⢉⡡⠐⠁⠀⠀⠀⣰⠁⠀⣧⠄⣼⠃⢸⠁⢎⡐⢣⡈⠑⠤⣀⠀⢀⣀⡠⢤⡔⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡞⠀⡏⣧⠀⠀⠀⠀⠀⠀⠀⠀⠐⣄⡼⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⡇⠀⠀⠀⠀⡾⣭⠿⣮⣿⠐⠊⠁⠀⠀⢀⡠⠒⣿⠀⠀⠟⣤⡟⠀⣸⡐⠬⡑⢎⠳⢤⣀⡋⠀⠈⡛⢁⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⢀⠤⠋⠀⣸⠡⢾⣶⣄⠀⠀⠀⡀⠀⠀⠀⠠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⡄⠀⠀⢠⡿⣽⠀⠀⠀⠀⠉⠁⠂⢹⠃⠀⣸⡿⡀⢀⠇⡿⠁⠀⡷⢹⡠⡵⠮⢵⣊⡴⠭⠛⣩⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠠⠤⣴⣪⣅⡎⣽⣷⣻⢱⣾⢻⡽⣆⠀⠀⠀⠈⢑⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⠃⠀⠀⢸⣳⡇⠀⠀⠀⠀⠀⠀⠀⡘⠀⢰⡏⢳⡇⢸⡿⠘⣄⣼⠕⡈⢷⠘⣄⠀⣤⡤⠖⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠲⢤⣀⣠⢤⡴⣏⠼⣿⣽⣻⢞⣧⢻⡼⡇⠀⠀⠀⠀⠙⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⣼⠃⢻⣇⠀⢧⣠⠟⣏⢖⡈⠜⣧⠚⡄⠹⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢃⢧⢊⢿⣷⣻⣞⣭⢷⣹⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⡎⠀⠈⢿⠀⠈⢿⡀⢿⢡⡱⣌⠌⣧⢳⡀⠙⣄⠀⠀⠀⠀⠀⠀⠀⡀⠔⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⣼⠼⡎⣻⣿⣳⣾⠁⠉⠁⠀⠀⠀⣀⣀⠀⠀⠀⠠⠀⠀⠀⠀⠠⠄⠤⠤⣤⡀⠀⠀⠀⠀⢼⣇⠀⠀⠀⢰⠁⠀⢀⣴⠀⠃⠀⡀⠈⡆⠀⠘⣷⣼⢂⠱⢌⠲⢌⣧⣣⠀⠀⠓⠢⣤⣤⠔⠢⠜⠀⡘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⠞⢁⠜⠁⡀⣇⡿⡌⣿⣾⢷⡶⡄⠀⠀⠀⣿⢦⣶⡒⠒⠒⢀⣂⣐⣒⠶⢶⡶⣞⡿⠀⠀⠀⠀⠀⣾⣹⠀⠀⠀⣿⠀⢠⣾⣹⡀⠀⠀⣹⡀⠙⡄⠀⢻⢾⡄⠱⣈⠱⢄⣈⠉⠑⠂⠈⢉⠮⢠⣤⠔⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣾⡿⠋⠀⢀⣠⣾⠁⣥⣇⣷⢸⣿⣷⢫⣟⡆⠀⠀⢿⢺⣽⠖⠂⠀⠀⠀⠀⠀⢿⣻⣼⡝⠀⠀⠀⠀⠀⣸⣳⣽⠀⠀⢰⡏⣠⣟⣶⡝⣧⠀⠀⡽⣇⠀⠹⣦⡘⣯⣧⠑⢤⠶⠤⣌⠭⢙⡩⣖⡥⠞⠉⠀⣠⠜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣳⠁⣠⣴⡟⣧⢿⠀⣿⠋⡆⡇⢣⣻⣿⣾⠇⠀⠀⠈⣷⡇⠀⣄⠐⠒⠀⢤⡄⠀⠀⠀⣿⠀⠀⠀⠀⠀⣷⣳⣻⠀⢀⣾⣳⡟⣾⢿⡾⣽⡆⠀⣟⡾⡄⡀⣿⢻⡶⣽⠈⡌⢣⢲⣖⠋⠥⡙⢤⠀⠀⠀⠻⣅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⡞⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⣄⣀⠀⠀⠀⢀⣼⢷⣧⣾⣟⣾⡿⣭⡇⢀⡇⠀⢻⢸⡀⠸⢯⠻⣄⠀⠀⢠⣾⡃⠀⠀⠁⠒⠂⠁⠀⠀⠀⠀⣼⢧⠀⠀⠀⢠⡿⣵⠿⢊⣵⣿⢧⣻⠃⠀⣿⣳⢿⣸⢿⡽⣇⣿⢾⡇⣻⣽⡖⠨⠌⢫⡪⢗⡆⢑⢂⡙⢢⣀⠀⠀⠑⡠⢤⢤⡄⠤⠶⠚⠀⡠⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢂⣈⠉⢉⣁⣿⣫⣾⠗⣏⣾⣻⣵⢣⣟⡆⡆⠀⢸⣧⠀⢸⣇⢹⣳⣄⡀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣽⣺⠀⠀⣠⣾⠛⠁⣠⣾⠃⢸⣿⠁⢠⡱⠚⣯⢿⣽⢯⣟⡽⢯⣞⠧⡘⣿⣯⠐⡉⢤⡝⠢⣉⠒⠦⠴⠆⠤⠿⢓⢞⠢⠤⣤⡤⠖⠀⢀⡠⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⣯⣆⢻⣵⢣⡛⣼⣯⢷⣻⠿⣼⣟⣷⠀⣿⣿⣧⣸⢿⣼⡃⢫⣿⠻⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣧⣿⠶⠚⢁⠎⠀⣺⡿⠋⠀⠸⣏⠴⠊⢀⢼⣟⣯⢾⣻⢮⣟⣻⡾⡐⢱⠇⢸⡐⠀⡎⢱⡐⠤⡉⠓⡐⢒⡶⡺⢋⡤⠧⠗⢉⠀⢀⣠⠞⠁⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡀⠀⠤⠤⠟⠋⢿⡡⢽⡿⡽⡾⣭⢿⡟⣮⡽⣦⣟⡎⢷⣻⡞⣿⣗⢄⡙⠦⣝⠷⢦⣄⣀⣀⣠⣤⣴⡶⠟⠋⠁⠀⢠⠎⠀⣰⡿⣀⠤⠖⠋⠁⠠⠒⢁⣾⣳⠋⣆⠻⣷⡹⣶⠹⡐⢸⠀⠘⣜⢆⠁⢸⠻⣶⡤⠕⣚⠩⢊⠔⡡⢉⠶⢤⡀⠉⠻⠧⣄⣀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢴⠝⠀⠀⣠⠤⢖⡒⠎⡍⢧⢋⣿⡳⣟⣽⢻⠸⣽⣻⡵⢯⡗⠬⣽⣾⠏⠈⣆⠘⠢⡈⠣⢄⠈⠛⢿⡟⠋⠁⠀⠀⠀⢀⣠⡯⠤⠒⠋⠉⣀⠤⠤⠒⢀⣠⣴⣿⣾⣧⣹⢲⠛⡜⢿⣼⠀⢳⡏⠀⠀⢯⠘⢅⠘⡄⠈⠙⢿⣤⡁⠌⢂⠱⡈⢍⠒⠦⠤⣀⡀⢀⡈⠑⢤⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢠⡞⠁⠀⢠⠊⠉⢩⠉⠉⠙⡞⢢⢡⢹⡟⣼⣧⣿⢱⢻⣿⣽⢫⣷⠃⣾⠙⠀⢰⣿⣿⣦⠈⠒⣤⠉⠓⢨⣿⣦⡔⠒⠋⠉⠁⣤⡄⠐⠒⠉⠁⢠⣤⣴⣾⣿⣿⣿⣿⣿⣿⠁⡎⠀⠈⣦⡟⠐⡄⡇⠀⠀⢸⣦⠀⠑⢣⠀⠀⠀⠈⢻⣷⣦⡅⠐⡌⠈⣦⡕⠒⠋⣥⠀⠀⠀⠑⡄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢠⣃⠤⠒⠚⢛⡿⠋⠁⢀⡤⠊⠅⢊⠰⣈⣷⢯⢿⡷⠃⠸⢻⡵⣿⠋⢱⣾⠀⢠⣿⣿⣿⣿⣷⣦⣄⡁⠒⡄⠀⣛⠀⢠⠔⠂⠉⢀⣀⣤⣤⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣀⠇⠀⡤⠈⢇⠀⢣⠈⢀⠀⠀⢿⡓⣦⣈⠀⠀⠀⠀⠀⠈⠫⢝⠳⠦⣉⡑⢤⡀⠀⠈⠻⣍⠁⠀⠚⢄⠀⠀
⠀⠀⠀⠀⠀⠀⠋⠀⠀⠀⣤⠁⠀⠀⣰⢋⣤⣵⠾⢿⠟⠋⠉⢿⡎⠀⠀⠀⡼⡻⠃⠀⠀⡟⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⡆⢸⠀⢸⠀⢸⠀⢰⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⢠⣿⠀⢸⠀⠈⡆⠀⣷⡄⠘⣇⢧⢻⡇⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠉⠐⠻⢦⣀⠀⠈⠳⠦⢀⣀⣀⠀⢸
⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠁⢀⣠⡼⠟⠋⠁⠠⠂⠀⠀⢀⠔⠉⠑⡄⠀⢊⣿⠁⠀⠀⢀⡇⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠈⡆⠸⠀⢘⠀⠨⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⡇⢠⣟⢮⡇⠀⢆⠀⢸⠀⣳⣚⢦⢸⠎⡖⡧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠲⢤⣄⠀⠀⠀⠀⢸
⠀⠀⠀⠀⠀⠀⠀⢠⣮⡴⠞⠛⠁⠀⠀⠀⠀⠀⢀⡴⢺⠃⠀⡴⣏⠀⠀⣼⣻⡀⣆⠀⣼⡇⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⡇⠀⡆⠈⡄⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣾⣡⣟⣮⢏⣷⠀⠀⠀⣾⡇⣗⣺⡭⢇⡿⢌⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⣧⣬⣿
⠀⠀⠀⠀⣀⣴⠞⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾⣱⡏⣠⣿⡹⢮⠀⢸⣯⡷⣇⣿⢦⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⢳⠀⡇⠀⡇⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⡾⣽⣻⣞⢮⡟⣾⠀⠀⢀⡷⣹⢇⢿⠻⣌⠱⢈⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢻
⠀⠀⣰⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡯⡵⡳⡿⢧⣛⢿⡄⢸⡷⣻⣽⣫⡿⣽⣞⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⢯⡷⣯⣟⣷⡿⣽⣻⠾⣽⠀⣰⣞⣳⠱⣎⢻⠀⢱⠈⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸
⣠⡾⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡷⣱⣻⠁⠸⣝⡞⣷⣸⢟⣳⢧⣿⢙⣷⡾⡽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⢅⡦⠐⢮⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣳⢯⠿⣍⣴⡟⢧⣍⠳⡌⠺⠀⠈⡆⡌⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣾
⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉
                  "Go ahead and live with your head held high. No matter how devastated you may be by your own weakness or uselessness,
                  set your heart ablaze.Grit your teeth and look straight ahead." - Kyojuro Rengoku.
*/

#include <bits/stdc++.h>
using namespace std;
const long long mod = (long long)1e9 + 7;
#define int long long
signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n;
    cin >> n;
    vector<int> v(n);
    for (int i = 0; i < n; i++) {
        cin >> v[i];
    }

    int ans = LLONG_MAX;
    for (int i = 0; i < n; i++) {
        vector<int> b(n, 0);
        b[i] = 0;
        int cnt = 0;

        // Calculate moves for elements to the left of i
        for (int j = i - 1; j >= 0; j--) {
            int x = b[j + 1] + 1;
            int y = (x + v[j] - 1) / v[j];
            cnt += y;
            b[j] = y * v[j];
        }

        // Calculate moves for elements to the right of i
        for (int j = i + 1; j < n; j++) {
            int x = b[j - 1] + 1;
            int y = (x + v[j] - 1) / v[j];
            cnt += y;
            b[j] = y * v[j];
        }

        ans = min(ans, cnt);
    }

    cout << ans << '\n';
    return 0;
}
